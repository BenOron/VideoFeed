{"version":3,"sources":["logo.svg","components/Header/playbuzzlogo.png","components/FilterSuorce/FilterSource.js","components/VideoItem/videoItemHelper.js","components/VideoItem/VideoItem.js","components/VideoFeed/VideoFeed.js","components/Header/Header.js","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","FilterSource","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","suorce","undefined","e","sSource","currentTarget","attributes","value","console","log","react_default","a","createElement","className","class","role","aria-label","type","onClick","fetchVideos","data-source","React","Component","videoItemHelper","getIframeBySuorce","src","sourceType","videoItem","source","id","videoId","data-width","data-height","data-href","data-show-text","url","width","height","controls","VideoItem","$card","target","closest","classList","search","remove","add","Fragment","title","VideoItem_videoItemHelper","rotateCard","react_fontawesome_index_es","icon","faCog","size","disabled","faExclamationTriangle","rel","faArrowAltCircleLeft","VideoFeed","error","videos","isLoading","fetchFrom","_this2","dataset","setState","length","fetch","then","response","json","data","catch","_this$state","FilterSuorce_FilterSource","bind","map","index","key","components_VideoItem_VideoItem","Header","to","require","alt","App","components_Header_Header","components_VideoFeed_VideoFeed","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d4871c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/playbuzzlogo.884d6731.png\";","import React from \"react\";\nimport \"./FilterSuorce.css\";\n\nclass FilterSource extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suorce: undefined\n    };\n  }\n\n  handleClick(e) {\n    let sSource = e.currentTarget.attributes[\"source\"].value;\n    //this.props.setState = { source: sSource };\n    console.log(sSource);\n    //VideoFeed.props.source = e.currentTarget.attributes[\"source\"].value;\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            onClick={this.props.fetchVideos}\n            data-source=\"facebook\"\n          >\n            Facebook\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            onClick={this.props.fetchVideos}\n            data-source=\"youtube\"\n          >\n            Youtube\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            onClick={this.props.fetchVideos}\n            data-source=\"url\"\n          >\n            Url\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            onClick={this.props.fetchVideos}\n            data-source=\"\"\n          >\n            all\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FilterSource;\n","import React from \"react\";\nimport \"./VideoItem.css\";\n\nclass videoItemHelper extends React.Component {\n  getIframeBySuorce = () => {\n    let sourceType = this.props.videoItem.source;\n    let id = !this.props.videoItem.videoId\n      ? undefined\n      : this.props.videoItem.videoId;\n    let iframe;\n    let src;\n\n    if (sourceType === \"youtube\") {\n      src = \"https://www.youtube.com/embed/\" + id;\n      return <iframe className=\"embed-responsive-item\" src={src} />;\n    } else if (sourceType === \"facebook\") {\n      src = \"https://www.facebook.com/facebook/videos/\" + id;\n      return (\n        <div\n          className=\"embed-responsive-item fb-video\"\n          data-width=\"523\"\n          data-height=\"294\"\n          data-href={src}\n          data-show-text=\"false\"\n        />\n      );\n    } else if (sourceType === \"url\") {\n      src = this.props.videoItem.url;\n      return (\n        <video class=\"embed-responsive-item\" width=\"523\" height=\"294\" controls>\n          <source src={src} />\n        </video>\n      );\n    }\n    return iframe;\n  };\n\n  render() {\n    return (\n      <div className=\"embed-responsive embed-responsive-16by9\">\n        {this.getIframeBySuorce()}\n      </div>\n    );\n  }\n}\n\nexport default videoItemHelper;\n","import React from \"react\";\nimport \"./VideoItem.css\";\nimport VideoItemHelper from \"./videoItemHelper\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nimport {\n  faArrowAltCircleLeft,\n  faCog,\n  faExclamationTriangle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass VideoItem extends React.Component {\n  rotateCard(e) {\n    var $card = e.target.closest(\".card-container\");\n    console.log($card);\n    if ($card.classList.value.search(\"hover\") > -1) {\n      $card.classList.remove(\"hover\");\n    } else {\n      $card.classList.add(\"hover\");\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"card-container manual-flip\">\n          <div className=\"card\">\n            <div className=\"front\">\n              <div className=\"content\">\n                <div className=\"headerfront\">\n                  <h5 className=\"motto\">{this.props.videoItem.title}</h5>\n                </div>\n                <VideoItemHelper {...this.props} />\n                <div className=\"footer\">\n                  <button className=\"btn btn-simple\" onClick={this.rotateCard}>\n                    <FontAwesomeIcon icon={faCog} size=\"1x\" />\n                    <span className=\"moresettings\">More video settings</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"back\">\n              <div className=\"header\">\n                <h5 className=\"mottoback\">\n                  Settings: {this.props.videoItem.title} video\n                </h5>\n              </div>\n              <div className=\"content\">\n                <form className=\"formSet\">\n                  Source:\n                  {!this.props.videoItem.source ? (\n                    <span>\n                      this content is missing_\n                      <FontAwesomeIcon icon={faExclamationTriangle} size=\"1x\" />\n                    </span>\n                  ) : (\n                    <input\n                      disabled=\"disabled\"\n                      type=\"text\"\n                      value={\" \" + this.props.videoItem.source}\n                    />\n                  )}\n                  <br />\n                  url:\n                  {!this.props.videoItem.url ? (\n                    <span>\n                      this content is missing_\n                      <FontAwesomeIcon icon={faExclamationTriangle} size=\"1x\" />\n                    </span>\n                  ) : (\n                    <input\n                      disabled=\"disabled\"\n                      type=\"text\"\n                      value={\" \" + this.props.videoItem.url}\n                    />\n                  )}\n                  <br />\n                  videoId:\n                  {!this.props.videoItem.videoId ? (\n                    <span>\n                      this content is missing_\n                      <FontAwesomeIcon icon={faExclamationTriangle} size=\"1x\" />\n                    </span>\n                  ) : (\n                    <input\n                      disabled=\"disabled\"\n                      type=\"text\"\n                      value={\" \" + this.props.videoItem.videoId}\n                    />\n                  )}\n                  `\n                  <br />\n                </form>\n                <div className=\"footer\">\n                  <button\n                    className=\"btn btn-simple\"\n                    rel=\"tooltip\"\n                    title=\"Flip Card\"\n                    onClick={this.rotateCard}\n                  >\n                    <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"1x\" />\n                    <i className=\"fa fa-reply\" />\n                  </button>\n                  <div className=\"social-links text-center\"> </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default VideoItem;\n","import React from \"react\";\nimport \"./VideoFeed.css\";\nimport FilterSource from \"../FilterSuorce/FilterSource\";\nimport { faAllergies } from \"@fortawesome/free-solid-svg-icons\";\nimport VideoItem from \"../VideoItem/VideoItem\";\n\nclass VideoFeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suorce: undefined,\n      error: undefined,\n      videos: undefined,\n      isLoading: true,\n      fetchFrom: \"/videos\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchVideos();\n  }\n  fetchVideos(e) {\n    let url = this.state.fetchFrom;\n    let sSource;\n    if (e) {\n      sSource = !e.currentTarget.dataset.source\n        ? \"\"\n        : e.currentTarget.dataset.source;\n      this.setState({\n        source: sSource\n      });\n      url =\n        sSource.length > 1\n          ? this.state.fetchFrom + \"/\" + sSource\n          : this.state.fetchFrom;\n    }\n    // Where we're fetching data from url\n    fetch(url)\n      // We get the API response and receive data in JSON format...\n      .then(response => response.json())\n      // ...then we update the users state\n      .then(\n        data =>\n          this.setState({\n            videos: data,\n            isLoading: false\n          }),\n        console.log(this.state.videos)\n      )\n      // Catch any errors we hit and update the app\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  render() {\n    const { isLoading, videos, error } = this.state;\n\n    return (\n      <React.Fragment>\n        <FilterSource fetchVideos={this.fetchVideos.bind(this)} />\n        <div className={\"videoList\"}>\n          {!isLoading ? (\n            videos.map((videoItem, index) => (\n              <div className=\"col-md-6 col-md-offset-3\" key={index}>\n                <VideoItem videoItem={videoItem} />\n              </div>\n            ))\n          ) : (\n            <h3>Loading...</h3>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default VideoFeed;\n","import React from \"react\";\n\nimport \"./Header.css\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className={\"containerHeader\"}>\n        <h1 className={\"brand\"} to=\"/\">\n          <img\n            src={require(\"./playbuzzlogo.png\")}\n            width=\"38\"\n            height=\"38\"\n            alt=\"\"\n          />\n          <span className={\"brandTxt\"}>PlayBuzz</span>\n        </h1>\n        <div className={\"banner\"}>\n          <p className={\"bannerDesc\"}>Video feed </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport VideoFeed from \"./components/VideoFeed/VideoFeed\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header/Header\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          <VideoFeed />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}